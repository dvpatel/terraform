---
# Source: aws-node-termination-handler/templates/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: aws-node-termination-handler
  labels:
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/instance: aws-node-termination-handler
    k8s-app: aws-node-termination-handler
    app.kubernetes.io/version: "1.3.1"
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
spec:
  privileged: false
  hostIPC: false
  hostNetwork: true
  hostPID: false
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  allowedCapabilities:
    - '*'
  fsGroup:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
    - '*'
---
# Source: aws-node-termination-handler/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aws-node-termination-handler
  namespace: kube-system
  labels:
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/instance: aws-node-termination-handler
    k8s-app: aws-node-termination-handler
    app.kubernetes.io/version: "1.3.1"
---
# Source: aws-node-termination-handler/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aws-node-termination-handler
rules:
- apiGroups:
    - ""
  resources:
    - nodes
  verbs:
    - get
    - patch
    - update
- apiGroups:
    - ""
  resources:
    - pods
  verbs:
    - list
- apiGroups:
    - ""
  resources:
    - pods/eviction
  verbs:
    - create
- apiGroups:
    - extensions
  resources:
    - replicasets
    - daemonsets
  verbs:
    - get
- apiGroups:
    - apps
  resources:
    - daemonsets
  verbs:
    - get
    - delete
---
# Source: aws-node-termination-handler/templates/psp.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aws-node-termination-handler-psp
  labels:
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/instance: aws-node-termination-handler
    k8s-app: aws-node-termination-handler
    app.kubernetes.io/version: "1.3.1"
rules:
  - apiGroups: ['policy']
    resources: ['podsecuritypolicies']
    verbs:     ['use']
    resourceNames:
      - aws-node-termination-handler
---
# Source: aws-node-termination-handler/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aws-node-termination-handler
subjects:
- kind: ServiceAccount
  name: aws-node-termination-handler
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: aws-node-termination-handler
  apiGroup: rbac.authorization.k8s.io
---
# Source: aws-node-termination-handler/templates/psp.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: aws-node-termination-handler-psp
  labels:
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/instance: aws-node-termination-handler
    k8s-app: aws-node-termination-handler
    app.kubernetes.io/version: "1.3.1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aws-node-termination-handler-psp
subjects:
  - kind: ServiceAccount
    name: aws-node-termination-handler
    namespace: kube-system
---
# Source: aws-node-termination-handler/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: aws-node-termination-handler
  namespace: kube-system
  labels:
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/instance: aws-node-termination-handler
    k8s-app: aws-node-termination-handler
    app.kubernetes.io/version: "1.3.1"
spec:
  updateStrategy:
    null
  selector:
    matchLabels:
      app.kubernetes.io/name: aws-node-termination-handler
      app.kubernetes.io/instance: aws-node-termination-handler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aws-node-termination-handler
        app.kubernetes.io/instance: aws-node-termination-handler
        k8s-app: aws-node-termination-handler
    spec:
      volumes:
        - name: "uptime"
          hostPath:
            path: "/proc/uptime"
      priorityClassName: "system-node-critical"
      affinity:
        nodeAffinity:
          # NOTE(jaypipes): Change when we complete
          # https://github.com/aws/aws-node-termination-handler/issues/8
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "beta.kubernetes.io/os"
                    operator: In
                    values:
                      - linux
                  - key: "beta.kubernetes.io/arch"
                    operator: In
                    values:
                      - amd64
      serviceAccountName: aws-node-termination-handler
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet    
      containers:
        - name: aws-node-termination-handler
          image: amazon/aws-node-termination-handler:v1.3.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: "uptime"
              mountPath: "/proc/uptime"
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SPOT_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: DELETE_LOCAL_DATA
            value: ""
          - name: IGNORE_DAEMON_SETS
            value: ""
          - name: GRACE_PERIOD
            value: ""
          - name: POD_TERMINATION_GRACE_PERIOD
            value: ""
          - name: INSTANCE_METADATA_URL
            value: ""
          - name: NODE_TERMINATION_GRACE_PERIOD
            value: ""
          - name: WEBHOOK_URL
            value: ""
          - name: WEBHOOK_HEADERS
            value: ""
          - name: WEBHOOK_TEMPLATE
            value: ""
          - name: DRY_RUN
            value: "false"
          - name: ENABLE_SPOT_INTERRUPTION_DRAINING
            value: ""
          - name: ENABLE_SCHEDULED_EVENT_DRAINING
            value: ""
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
