apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: application-gateway
  namespace: dev
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: application-virtualservice
  namespace: dev
spec:
  hosts:
  - "*"
  gateways:
  - application-gateway
  http:
  - match:
    - uri:
        exact: /
    route:
    - destination:
        host: web-stateless-service
        port:
          number: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: web-stateless
  namespace: dev
spec:
  host: web-stateless-service
  subsets:
  - name: v1
    labels:
      version: v1
---

apiVersion: v1
kind: Service
metadata:
  namespace: dev
  name: web-stateless-service
  labels:
    app: web-stateless
    service: web-stateless
spec:
  ports:
  - port: 80
    name: http
  selector:
    app: web-stateless
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: web-stateless-serviceaccount
  namespace: dev
  labels:
    account: web-stateless
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-stateless-v1
  namespace: dev
  labels:
    app: web-stateless
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-stateless
      version: v1
  template:
    metadata:
      labels:
        app: web-stateless
        version: v1
    spec:
      serviceAccountName: web-stateless-serviceaccount
      containers:
      - image: nginx
        name: web-stateless
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
      nodeSelector:
        lifecycle: Ec2Spot
